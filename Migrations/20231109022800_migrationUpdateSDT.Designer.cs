// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_Windows;

#nullable disable

namespace Project_Windows.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20231109022800_migrationUpdateSDT")]
    partial class migrationUpdateSDT
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BranchClass", b =>
                {
                    b.Property<long>("BranchesBranchID")
                        .HasColumnType("bigint");

                    b.Property<long>("ClassesClassID")
                        .HasColumnType("bigint");

                    b.HasKey("BranchesBranchID", "ClassesClassID");

                    b.HasIndex("ClassesClassID");

                    b.ToTable("BranchClass");
                });

            modelBuilder.Entity("BranchStudent", b =>
                {
                    b.Property<long>("BranchesBranchID")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentsStudentID")
                        .HasColumnType("bigint");

                    b.HasKey("BranchesBranchID", "StudentsStudentID");

                    b.HasIndex("StudentsStudentID");

                    b.ToTable("BranchStudent");
                });

            modelBuilder.Entity("ClassStudent", b =>
                {
                    b.Property<long>("ClassesClassID")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentsStudentID")
                        .HasColumnType("bigint");

                    b.HasKey("ClassesClassID", "StudentsStudentID");

                    b.HasIndex("StudentsStudentID");

                    b.ToTable("ClassStudent");
                });

            modelBuilder.Entity("Project_Windows.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Password = "123456",
                            RoleID = 1,
                            Username = "sinh123"
                        },
                        new
                        {
                            Id = 3,
                            Password = "123456",
                            RoleID = 2,
                            Username = "sinhdeptrai"
                        },
                        new
                        {
                            Id = 4,
                            Password = "123456",
                            RoleID = 1,
                            Username = "sinh1"
                        });
                });

            modelBuilder.Entity("Project_Windows.Models.Branch", b =>
                {
                    b.Property<long>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BranchID"));

                    b.Property<string>("NameBranch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchID");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            BranchID = 1L,
                            NameBranch = "Công nghệ thông tin"
                        },
                        new
                        {
                            BranchID = 2L,
                            NameBranch = "Quản trị kinh doanh"
                        },
                        new
                        {
                            BranchID = 3L,
                            NameBranch = "Kế toán"
                        },
                        new
                        {
                            BranchID = 4L,
                            NameBranch = "Ngôn ngữ Anh"
                        },
                        new
                        {
                            BranchID = 5L,
                            NameBranch = "Quản trị nhân lực"
                        });
                });

            modelBuilder.Entity("Project_Windows.Models.Class", b =>
                {
                    b.Property<long>("ClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ClassID"));

                    b.Property<long>("BranchID")
                        .HasColumnType("bigint");

                    b.Property<string>("NameClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassID");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassID = 1L,
                            BranchID = 1L,
                            NameClass = "21DHTT01"
                        },
                        new
                        {
                            ClassID = 2L,
                            BranchID = 1L,
                            NameClass = "21DHTT02"
                        },
                        new
                        {
                            ClassID = 3L,
                            BranchID = 2L,
                            NameClass = "21QTKD01"
                        },
                        new
                        {
                            ClassID = 4L,
                            BranchID = 2L,
                            NameClass = "21QTKD02"
                        },
                        new
                        {
                            ClassID = 5L,
                            BranchID = 3L,
                            NameClass = "21KT01"
                        },
                        new
                        {
                            ClassID = 6L,
                            BranchID = 3L,
                            NameClass = "21KT01"
                        },
                        new
                        {
                            ClassID = 7L,
                            BranchID = 4L,
                            NameClass = "21DHNA01"
                        },
                        new
                        {
                            ClassID = 8L,
                            BranchID = 4L,
                            NameClass = "21DHNA02"
                        },
                        new
                        {
                            ClassID = 9L,
                            BranchID = 5L,
                            NameClass = "21QTNL01"
                        },
                        new
                        {
                            ClassID = 10L,
                            BranchID = 5L,
                            NameClass = "21QTNL02"
                        });
                });

            modelBuilder.Entity("Project_Windows.Models.Student", b =>
                {
                    b.Property<long>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StudentID"));

                    b.Property<string>("AddressStudent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("Date");

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameStudent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)");

                    b.Property<string>("SexStudent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 2154810083L,
                            AddressStudent = "Bình Thuận",
                            BirthDay = new DateTime(2003, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BranchID = 1,
                            ClassID = 1,
                            Email = "2154810083@vaa.edu.vn",
                            NameStudent = "Võ Hiếu Sinh",
                            Phone = "0933516029",
                            SexStudent = "Nam"
                        },
                        new
                        {
                            StudentID = 215888488L,
                            AddressStudent = "Cà Mau",
                            BirthDay = new DateTime(2003, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BranchID = 1,
                            ClassID = 1,
                            Email = "2154810083@vaa.edu.vn",
                            NameStudent = "Trần Nguyễn Khánh TRang",
                            Phone = "0933516029",
                            SexStudent = "Nữ"
                        },
                        new
                        {
                            StudentID = 21588477L,
                            AddressStudent = "Nghê An",
                            BirthDay = new DateTime(2003, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BranchID = 1,
                            ClassID = 2,
                            Email = "2154810100@vaa.edu.vn",
                            NameStudent = "Lê Công Phượng",
                            Phone = "0933516029",
                            SexStudent = "Nam"
                        },
                        new
                        {
                            StudentID = 21588812234L,
                            AddressStudent = "Argentina",
                            BirthDay = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BranchID = 1,
                            ClassID = 1,
                            Email = "lionelmessi@vaa.edu.vn",
                            NameStudent = "Lionel Messi",
                            Phone = "0382080567",
                            SexStudent = "Nam"
                        },
                        new
                        {
                            StudentID = 7777777L,
                            AddressStudent = "Potural",
                            BirthDay = new DateTime(2000, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BranchID = 1,
                            ClassID = 1,
                            Email = "cristianoronaldo@vaa.edu.vn",
                            NameStudent = "Cristiano Ronaldo",
                            Phone = "7777777777",
                            SexStudent = "Nam"
                        });
                });

            modelBuilder.Entity("Project_Windows.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectID"));

                    b.Property<int>("SubjectCredit")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectID");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectID = 1,
                            SubjectCredit = 3,
                            SubjectName = "Lập trình Windows"
                        },
                        new
                        {
                            SubjectID = 2,
                            SubjectCredit = 3,
                            SubjectName = "Lập trình di động"
                        },
                        new
                        {
                            SubjectID = 3,
                            SubjectCredit = 3,
                            SubjectName = "Lập trình Web"
                        },
                        new
                        {
                            SubjectID = 4,
                            SubjectCredit = 3,
                            SubjectName = "Trí tuệ nhân tạo"
                        },
                        new
                        {
                            SubjectID = 5,
                            SubjectCredit = 3,
                            SubjectName = "Công nghệ phần mềm"
                        },
                        new
                        {
                            SubjectID = 6,
                            SubjectCredit = 3,
                            SubjectName = "Đồ án cơ sở ngành"
                        },
                        new
                        {
                            SubjectID = 7,
                            SubjectCredit = 3,
                            SubjectName = "Đồ án chuyên ngành"
                        },
                        new
                        {
                            SubjectID = 8,
                            SubjectCredit = 3,
                            SubjectName = "Lập trình python"
                        },
                        new
                        {
                            SubjectID = 9,
                            SubjectCredit = 2,
                            SubjectName = "Phân tích và thiết kế giải thuật"
                        });
                });

            modelBuilder.Entity("Project_Windows.Models.SubjectScoreDetail", b =>
                {
                    b.Property<long>("SubjectScoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SubjectScoreID"));

                    b.Property<string>("NameStudent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Score1")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Score2")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("StudentID")
                        .HasColumnType("bigint");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("SubjectScoreID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectID");

                    b.ToTable("SubjectScoreDetails");
                });

            modelBuilder.Entity("Project_Windows.Models.Term", b =>
                {
                    b.Property<int>("TermID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TermID"));

                    b.Property<string>("NameStudent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentID")
                        .HasColumnType("bigint");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("TermID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectID");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("BranchClass", b =>
                {
                    b.HasOne("Project_Windows.Models.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchesBranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_Windows.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("ClassesClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BranchStudent", b =>
                {
                    b.HasOne("Project_Windows.Models.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchesBranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_Windows.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClassStudent", b =>
                {
                    b.HasOne("Project_Windows.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("ClassesClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_Windows.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_Windows.Models.SubjectScoreDetail", b =>
                {
                    b.HasOne("Project_Windows.Models.Student", "Student")
                        .WithMany("SubjectScoreDetails")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_Windows.Models.Subject", "Subject")
                        .WithMany("SubjectScoreDetails")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Project_Windows.Models.Term", b =>
                {
                    b.HasOne("Project_Windows.Models.Student", "Student")
                        .WithMany("Terms")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_Windows.Models.Subject", "Subject")
                        .WithMany("Terms")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Project_Windows.Models.Student", b =>
                {
                    b.Navigation("SubjectScoreDetails");

                    b.Navigation("Terms");
                });

            modelBuilder.Entity("Project_Windows.Models.Subject", b =>
                {
                    b.Navigation("SubjectScoreDetails");

                    b.Navigation("Terms");
                });
#pragma warning restore 612, 618
        }
    }
}
